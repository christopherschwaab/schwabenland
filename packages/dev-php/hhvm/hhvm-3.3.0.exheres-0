# Copyright 2014 Christopher Schwaab
# Distributed under the terms of the GNU General Public License v2

#SCM_REPOSITORY="https://github.com/facebook/hhvm.git"
#SCM_TAG=HHVM-3.3.0
#SCM_SECONDARY_REPOSITORIES='third_party folly thrift'
#SCM_EXTERNAL_REFS='third-party:third_party third-party/folly:folly third-party/thrift/src:thrift'
#
#SCM_third_party_REPOSITORY=https://github.com/hhvm/hhvm-third-party.git
#SCM_folly_REPOSITORY=https://github.com/facebook/folly.git
#SCM_thrift_REPOSITORY=https://github.com/facebook/fbthrift.git
#SCM_third_party_TAG=HHVM-3.3

#require scm-git cmake
require cmake

SUMMARY="An open-source virtual machine designed for executing programs written in Hack and PHP."
DESCRIPTION="
An open-source virtual machine designed for executing programs written in Hack and PHP. HHVM uses a
just-in-time (JIT) compilation approach to achieve superior performance while maintaining the
flexibility that PHP developers are accustomed to.
http://hhvm.com
"
HOMEPAGE="http://hhvm.com"

LICENCES="PHP-3"
SLOT="0"
PLATFORMS="~amd64"
MYOPTIONS="
    asserts [[ description = [ Enable asserts. ] ]]
    debug-apc-leak [[ description = [ Allow easier debugging of apc leaks. ] ]]
    debug-memory-leak [[ description = [ Allow easier debugging of memory leaks. ] ]]
    tracing [[ description = [ Enable tracing. ] ]]
    zend-compat [[ description = [ Enable zend source compatibility. ] ]]
    profiling [[ description = [ Enable execution profiler. ] ]]
    packed-tv [[ description = [ Enable packed typed value compilation. ] ]]
    staticcxx [[ description = [ Statically link libstd++ and libgcc. ] ]]
    google-cpu-profiler [[ description = [ Use google cpu profiler. ] ]]
    google-heap-profiler [[ description = [ Use google heap profiler. ] ]]
    (
        jemalloc [[ description = [ Enable execution profiler. ] ]]
        tcmalloc [[ description = [ Enable execution profiler. ] ]]
    ) [[ number-selected = exactly-one ]]
"

_FOLLY_SHA=6e46d468cf2876dd59c7a4dddcb4e37abf070b7a
DOWNLOADS="
    https://github.com/facebook/hhvm/archive/HHVM-${PV}.tar.gz -> ${PNV}.tgz
    https://github.com/hhvm/hhvm-third-party/archive/HHVM-$(ever range 1-2 $PV).zip -> third-party-${PV}.zip
    https://github.com/facebook/folly/archive/${_FOLLY_SHA}.zip -> folly-${_FOLLY_SHA}.zip
"
WORK="${WORKBASE}/hhvm-HHVM-${PV}"

# These are just taken from the output of cmake and the CMake/Find*.cmake files.
# No idea if there's anything superfluous or missing.
# I seemed to be able to build it without c-client so it must bundle some stuff.
DEPENDENCIES="
    build:
        sys-devel/bison
        sys-devel/flex
    build+run:
        dev-libs/boost
        dev-db/mysql
        dev-libs/libmemcached
        dev-libs/pcre
        net-misc/curl
        dev-libs/libxml2
        dev-libs/libxslt
        dev-libs/expat
        dev-db/sqlite:3
        dev-libs/icu
        jemalloc? ( dev-libs/jemalloc )
        tcmalloc? ( dev-libs/tcmalloc )
        dev-libs/tbb
        dev-libs/libmcrypt
        dev-libs/openssl
        sys-libs/zlib
        app-arch/bzip2
        dev-libs/oniguruma
        net-directory/openldap
        sys-libs/readline
        dev-libs/libedit
        dev-util/elfutils
        dev-util/libdwarf
        dev-lang/ocaml
        media-libs/libpng
        media-libs/libvpx
        media-libs/freetype
        dev-libs/gmp
        media-gfx/ImageMagick
        dev-libs/libyaml
        dev-cpp/gflags
        dev-cpp/glog
        dev-libs/c-client
        dev-libs/libevent
        dev-libs/json-c
"

BUGS_TO="christopher.schwaab@gmail.com"

src_prepare() {
    # FIXME surely there's a less hacky way to do this?
    rm -rf third-party
    ln -s "${WORKBASE}/hhvm-third-party-HHVM-$(ever range 1-2 $PV)/" third-party

    mkdir -p third-party/folly/src
    ln -s "${WORKBASE}/folly-${_FOLLY_SHA}/folly" third-party/folly/src/folly

    sed -i '/pcre/d' third-party/CMakeLists.txt
    sed -i 's~install(PROGRAMS ${CMAKE_CURRENT_SOURCE_DIR}/bin/hh_server~  install(PROGRAMS ${CMAKE_CURRENT_SOURCE_DIR}/bin/hh_single_type_check DESTINATION bin COMPONENT dev)\n&~' \
        hphp/hack/CMakeLists.txt
    sed -e 's~${CMAKE_CURRENT_BINARY_DIR}/constants.h~${CMAKE_CURRENT_SOURCE_DIR}/constants.h~' \
        -i hphp/system/CMakeLists.txt
}

src_configure() {
    # FIXME probably should test these some time.
    ecmake \
        -DCMAKE_INSTALL_PREFIX="/usr" \
        -DLIBDWARF_CONST_NAME=1 \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        -DALWAYS_ASSERT=$(option asserts ON OFF) \
        -DDEBUG_APC_LEAK=$(option debug-apc-leak ON OFF) \
        -DDEBUG_MEMORY_LEAK=$(option debug-memory-leak ON OFF) \
        -DENABLE_TRACE=$(option tracing ON OFF) \
        -DENABLE_ZEND_COMPAT=$(option zend-compat ON OFF) \
        -DEXECUTION_PROFILER=$(option profiling ON OFF) \
        -DPACKED_TV=$(option packed-tv ON OFF) \
        -DSTATIC_CXX_LIB=$(option staticcxx ON OFF) \
        -DUSE_GOOGLE_CPU_PROFILER=$(option google-cpu-profiler ON OFF) \
        -DUSE_GOOGLE_HEAP_PROFILER=$(option google-heap-profiler ON OFF) \
        -DUSE_JEMALLOC=$(option jemalloc ON OFF) \
        -DUSE_TCMALLOC=$(option tcmalloc ON OFF)
}
